@mixin object-fit($fit: fill, $position: null) {
	-o-object-fit: $fit;
	object-fit: $fit;
	@if $position {
		-o-object-position: $position;
		object-position: $position;
		font-family: "object-fit: #{$fit}; object-position: #{$position}";
	} @else {
		font-family: "object-fit: #{$fit}";
	}
}

@mixin visually-hidden {
	position: absolute;
	clip: rect(0 0 0 0);
	width: 1px;
	height: 1px;
	margin: -1px;
}

@mixin font-size($maxSize, $minSize) {
	font-size: $maxSize + px;
	$diffSize: $maxSize - $minSize;
	@media screen and (max-width: #{$maxWidthContainer + px}) {
		font-size: calc(#{$minSize + px} + #{$diffSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
	}
}
@mixin line-height($maxSize, $minSize) {
	line-height: $maxSize + px;
	$diffSize: $maxSize - $minSize;
	@media screen and (max-width: #{$maxWidthContainer + px}) {
		line-height: calc(#{$minSize + px} + #{$diffSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
	}
}

//Адаптивный отступ
@mixin adaptiv-value($indentType, $pcSize, $mobSize, $maxSize) {
	$addSize: $pcSize - $mobSize;
	@if $maxSize==1 {
		//Только если меньше контейнера
		#{$indentType}: $pcSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$indentType}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $maxSize==2 {
		//Только если больше контейнера
		#{$indentType}: $pcSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$indentType}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//Всегда
		#{$indentType}: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
